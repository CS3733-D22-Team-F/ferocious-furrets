plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.27.1'
    id "io.freefair.lombok" version "5.0.0-rc6"
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}
mainClassName = 'edu.wpi.cs3733.D22.teamF.Main'

shadowJar {
    mergeServiceFiles()    //For Merging Service Descriptor Files
}

repositories {
    flatDir {
        dirs 'APIJARs'
    }
    mavenCentral()
    maven {
        url 'https://apisite.crmyers.dev/maven'
    }
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media']
}


dependencies {
    implementation(
            'com.github.afester.javafx:FranzXaver:0.1',
            'org.reflections:reflections:0.10.2',

            'com.jfoenix:jfoenix:9.0.10',

            // You may comment out the database dependency you do not use
            'org.xerial:sqlite-jdbc:3.36.0.3',
            'org.apache.derby:derby:10.15.2.0',
            'org.apache.derby:derbyclient:10.15.2.0',
            'org.apache.derby:derbytools:10.15.2.0',

//            'org.docx4j:docx4j-JAXB-Internal:8.3.3',
            'org.docx4j:docx4j-JAXB-ReferenceImpl:8.3.3',
            'org.docx4j:docx4j-core:8.3.3',
            'org.docx4j:docx4j-documents4j-local:8.3.3',
            'com.documents4j:documents4j-api:1.1.7',
            'com.documents4j:documents4j-local:1.1.7',

            'org.slf4j:slf4j-api:1.7.36',
            'org.slf4j:slf4j-simple:1.7.36',

            'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1',
            'com.sun.xml.bind:jaxb-impl:3.0.2',
            'com.sun.xml.bind:jaxb-core:3.0.2',
            'org.glassfish.jaxb:jaxb-runtime:2.3.2',
            'javax.xml.bind:jaxb-api:2.3.1',
            'io.github.palexdev:materialfx:11.13.5'
    )

    compile fileTree(dir: 'lib', includes: ['*.jar'])

    implementation name : 'edu.wpi.cs3733.D22.teamF'
    implementation(files("APIJARs/CS3733-D22-Team-D-SanitationRequestAPI v2.0.jar"))
    implementation(files("APIJARs/teamBAPI.jar"))
    implementation(files('APIJARs/edu.wpi.cs3733.D22.teamF.jar'))

    testCompile(
            "org.testfx:testfx-core:4.0.16-alpha",
            'org.junit.jupiter:junit-jupiter:5.8.2',
            'org.testfx:testfx-junit5:4.0.16-alpha',
    )
}


test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

def codeCoverageExcludes = [
        'edu.wpi.teamname.App',
        'edu.wpi.teamname.Main',
]

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0
            }
            excludes = codeCoverageExcludes
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0
            }
            excludes = codeCoverageExcludes
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0
            }
            excludes = codeCoverageExcludes
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport
compileJava.dependsOn 'spotlessApply'

spotless {
    java {
        googleJavaFormat()
    }
}
